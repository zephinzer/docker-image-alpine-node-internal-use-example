#!/bin/bash
# script-wide constants
CURR_DIR=$(dirname $0);
PROJ_DIR=${CURR_DIR}/../..;
SETUP_DIR=${PROJ_DIR}/.setup;
UTILS_DIR=${CURR_DIR}/../utils;
mkdir -p ${SETUP_DIR};

# output build versions
BUILD_VERSION=$(${UTILS_DIR}/build_version);
printf "BUILD_VERSION             : ${BUILD_VERSION}\n";

# output docker registry url
DOCKER_REGISTRY_URL=$(${UTILS_DIR}/docker_registry_url);
if [[ "${DOCKER_REGISTRY_URL}" = "" ]]; then
  DOCKER_REGISTRY_PULL_URL='https://index.docker.io';
else
  DOCKER_REGISTRY_PULL_URL="${DOCKER_REGISTRY_URL}";
fi;
printf "DOCKER_REGISTRY_URL       : ${DOCKER_REGISTRY_URL}\n";
printf "DOCKER_REGISTRY_PULL_URL  : ${DOCKER_REGISTRY_PULL_URL}\n";

# output repository name
REPOSITORY_NAME=$(${UTILS_DIR}/repository_name 'zephinzer/alpine-node');
printf "REPOSITORY_NAME           : ${REPOSITORY_NAME}\n";

# set base image versions [[MAINTENANCE]]
## base source
BASE_IMAGE_NAME=$(${UTILS_DIR}/base_image_name 'iron/base');
BASE_IMAGE_NAME_KEY="__BASE_IMAGE_NAME__";
BASE_IMAGE_NAME_SED="s|${BASE_IMAGE_NAME_KEY}|${BASE_IMAGE_NAME}|g";
printf "BASE_IMAGE_NAME           : ${BASE_IMAGE_NAME}\n";

## base tag
BASE_IMAGE_TAG=$(${UTILS_DIR}/base_image_tag '3.4');
BASE_IMAGE_TAG_KEY="__BASE_IMAGE_TAG__";
BASE_IMAGE_TAG_SED="s|${BASE_IMAGE_TAG_KEY}|${BASE_IMAGE_TAG}|g";
printf "BASE_IMAGE_TAG            : ${BASE_IMAGE_TAG}\n";

## yarn
YARN_VERSION=$(${UTILS_DIR}/yarn_version);
YARN_VERSION_KEY="__YARN_VERSION__";
YARN_VERSION_SED="s|${YARN_VERSION_KEY}|${YARN_VERSION}|g";
printf "YARN_VERSION              : ${YARN_VERSION}\n";

# create base dockerfile
TEMPLATE_DOCKERFILE="${PROJ_DIR}/.Dockerfile";
BASE_DOCKERFILE="${SETUP_DIR}/.Dockerfile";
sed \
  -e "${BASE_IMAGE_NAME_SED}" \
  -e "${BASE_IMAGE_TAG_SED}" \
  -e "${YARN_VERSION_SED}" \
  ${TEMPLATE_DOCKERFILE} > ${BASE_DOCKERFILE};

# get (latest||LTS) node versions [[MAINTENANCE]]
NODE_VERSION_KEY="__NODE_VERSION__";

## argon (4.x)
ARGON_DOCKERFILE="${PROJ_DIR}/ARGON.Dockerfile";
ARGON_VERSION="$(${UTILS_DIR}/argon_version)";
ARGON_VERSION_SED="s|${NODE_VERSION_KEY}|${ARGON_VERSION}|g";
printf "ARGON_VERSION             : ${ARGON_VERSION}\n";
sed -e "s|--without-intl| |g" -e "${ARGON_VERSION_SED}" "${BASE_DOCKERFILE}" > "${ARGON_DOCKERFILE}";

## boron (6.x)
BORON_DOCKERFILE="${PROJ_DIR}/BORON.Dockerfile";
BORON_VERSION="$(${UTILS_DIR}/boron_version)";
BORON_VERSION_SED="s|${NODE_VERSION_KEY}|${BORON_VERSION}|g";
printf "BORON_VERSION             : ${BORON_VERSION}\n";
sed -e "${BORON_VERSION_SED}" "${BASE_DOCKERFILE}" > "${BORON_DOCKERFILE}";

## carbon (8.x)
CARBON_DOCKERFILE="${PROJ_DIR}/CARBON.Dockerfile";
CARBON_VERSION=$(${UTILS_DIR}/carbon_version);
CARBON_VERSION_SED="s|${NODE_VERSION_KEY}|${CARBON_VERSION}|g";
printf "CARBON_VERSION            : ${CARBON_VERSION}\n";
sed -e "${CARBON_VERSION_SED}" "${BASE_DOCKERFILE}" > "${CARBON_DOCKERFILE}";
